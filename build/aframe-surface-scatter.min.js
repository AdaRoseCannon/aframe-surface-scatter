!function(t){"use strict";const e=new t.Triangle,i=new t.Vector3;class r{constructor(t){let e=t.geometry;if(!e.isBufferGeometry||3!==e.attributes.position.itemSize)throw new Error("THREE.MeshSurfaceSampler: Requires BufferGeometry triangle mesh.");e.index&&(e=e.toNonIndexed()),this.geometry=e,this.randomFunction=Math.random,this.positionAttribute=this.geometry.getAttribute("position"),this.colorAttribute=this.geometry.getAttribute("color"),this.weightAttribute=null,this.distribution=null}setWeightAttribute(t){return this.weightAttribute=t?this.geometry.getAttribute(t):null,this}build(){const t=this.positionAttribute,i=this.weightAttribute,r=new Float32Array(t.count/3);for(let s=0;s<t.count;s+=3){let o=1;i&&(o=i.getX(s)+i.getX(s+1)+i.getX(s+2)),e.a.fromBufferAttribute(t,s),e.b.fromBufferAttribute(t,s+1),e.c.fromBufferAttribute(t,s+2),o*=e.getArea(),r[s/3]=o}this.distribution=new Float32Array(t.count/3);let s=0;for(let t=0;t<r.length;t++)s+=r[t],this.distribution[t]=s;return this}setRandomGenerator(t){return this.randomFunction=t,this}sample(t,e,i){const r=this.distribution[this.distribution.length-1],s=this.binarySearch(this.randomFunction()*r);return this.sampleFace(s,t,e,i)}binarySearch(t){const e=this.distribution;let i=0,r=e.length-1,s=-1;for(;i<=r;){const o=Math.ceil((i+r)/2);if(0===o||e[o-1]<=t&&e[o]>t){s=o;break}t<e[o]?r=o-1:i=o+1}return s}sampleFace(t,r,s,o){let a=this.randomFunction(),n=this.randomFunction();return a+n>1&&(a=1-a,n=1-n),e.a.fromBufferAttribute(this.positionAttribute,3*t),e.b.fromBufferAttribute(this.positionAttribute,3*t+1),e.c.fromBufferAttribute(this.positionAttribute,3*t+2),r.set(0,0,0).addScaledVector(e.a,a).addScaledVector(e.b,n).addScaledVector(e.c,1-(a+n)),void 0!==s&&e.getNormal(s),void 0!==o&&void 0!==this.colorAttribute&&(e.a.fromBufferAttribute(this.colorAttribute,3*t),e.b.fromBufferAttribute(this.colorAttribute,3*t+1),e.c.fromBufferAttribute(this.colorAttribute,3*t+2),i.set(0,0,0).addScaledVector(e.a,a).addScaledVector(e.b,n).addScaledVector(e.c,1-(a+n)),o.r=i.x,o.g=i.y,o.b=i.z),this}}const s={object:{type:"selector"},count:{default:128},weightAttribute:{default:""},scale:{type:"vec3",default:new THREE.Vector3(1,1,1)},scaleJitter:{type:"vec3",default:new THREE.Vector3},uniformJitter:{default:!0}},o=new THREE.Vector3,a=new THREE.Vector3(0,1,0),n=new THREE.Quaternion,c=new THREE.Vector3,h=new THREE.Vector3(1,1,1),u=new THREE.Matrix4;AFRAME.registerComponent("surface-scatter",{schema:s,multiple:!0,description:"This component uses instancing to cover one object in another.",init(){this.instance=[],this.update=this.update.bind(this),this.buildSampler=this.buildSampler.bind(this),this.el.addEventListener("object3dset",this.buildSampler),this.buildSampler()},buildSampler(){const t=[];this.el.object3D.traverse((function(e){!e.isInstancedMesh&&e.geometry&&t.push(e.geometry)})),t.length&&(this.sampler=new r({geometry:THREE.BufferGeometryUtils.mergeBufferGeometries(t)}),this.data.weightAttribute&&this.sampler.setWeightAttribute(this.data.weightAttribute),this.sampler.build(),this.resample())},resample(){if(this.sampler&&this.scales){for(let t=0;t<this.data.count;t++){this.sampler.sample(o,c),n.setFromUnitVectors(a,c),h.fromArray(this.scales[t]),u.compose(o,n,h);for(const e of this.instance)e.setMatrixAt(t,u)}for(const t of this.instance)t.instanceMatrix.needsUpdate=!0}},update(t){const e=this.data,i=this.instance;this.scales=[];for(let t=0;t<this.data.count;t++){const e=Math.random();this.scales[t]=[this.data.scale.x+(this.data.uniformJitter?e:Math.random())*this.data.scaleJitter.x,this.data.scale.y+(this.data.uniformJitter?e:Math.random())*this.data.scaleJitter.y,this.data.scale.z+(this.data.uniformJitter?e:Math.random())*this.data.scaleJitter.z]}t.object&&t.object.removeEventListener("object3dset",this.update),e.object.addEventListener("object3dset",this.update);const r=new THREE.Group;this.el.getObject3D("instances")&&this.el.removeObject3D("instances"),i.splice(0),e.object&&e.object.object3D.traverse((function(t){if(t.geometry&&t.material){const s=new THREE.InstancedMesh(t.geometry,t.material,e.count);i.push(s),r.add(s)}})),this.el.setObject3D("instances",r),this.resample()},remove(){this.el.removeObject3D("instances"),this.el.removeEventListener("object3dset",this.resample),this.data.object.removeEventListener("object3dset",this.update)}})}(THREE);
//# sourceMappingURL=aframe-surface-scatter.min.js.map
